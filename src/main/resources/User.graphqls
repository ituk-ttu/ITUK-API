type UserQueries {
    getUser(id: Int!): User!
    allUsers: [User]
    getUsersByStatus(statusId: Int!): [User]
    getActiveUsers: [User]
}
schema {
    query: UserQueries
    mutation: UserMutations
}
type User {
    id: ID!
    firstname: String!
    lastname: String!
    email: String!
    cardnumber: String
    telegram: String
    password: String!
    studentcode: String!
    userstatus: Userstatus
    curriculum: String!
    iban: String
    mentor: Mentor
    admin: Boolean
    archived: Boolean
}


type UserMutations {
    newUser(user: UserInput): User!
    changeStatus(id: Int!, statusId: Int!): User!
    updateUser(user: UpdateUserInput): User
    deleteUser(userId: Int!): Boolean
}

input UserInput {
    firstname: String!
    lastname: String!
    email: String!
    cardnumber: String
    telegram: String
    password: String
    studentcode: String!
    statusid: Int!
    curriculum: String!
    iban: String
    mentorid: Int
    admin: Boolean
    archived: Boolean
}

input UpdateUserInput {
    id: ID!
    firstname: String
    lastname: String
    email: String
    cardnumber: String
    telegram: String
    password: String
    studentcode: String
    statusid: Int
    curriculum: String
    iban: String
    mentorid: Int
    admin: Boolean
    archived: Boolean
}